// game-detail.js - –õ–æ–≥–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–µ—Ç–∞–ª–µ–π –∏–≥—Ä—ã

let currentScreenshotIndex = 0;
let screenshotsData = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–µ—Ç–∞–ª–µ–π
function initializeGameDetailPage() {
    const selectedGame = JSON.parse(localStorage.getItem('selectedGame'));
    
    if (!selectedGame) {
        window.location.href = 'games.html';
        return;
    }
    
    displayGameDetails(selectedGame);
    setupComments(selectedGame.name);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∏–≥—Ä—ã
function displayGameDetails(game) {
    const container = document.getElementById('gameDetailContainer');
    if (!container) return;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    const userGPU = localStorage.getItem('selectedGPU');
    const compatibility = userGPU ? checkCompatibility(userGPU, game.gpu) : null;
    const compatibilityClass = getCompatibilityClass(compatibility);
    const compatibilityMessage = getCompatibilityMessage(compatibility, userGPU, game.gpu);
    
    container.innerHTML = `
        <div class="game-detail-layout">
            <!-- –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –æ–±–ª–æ–∂–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
            <div class="game-detail-sidebar">
                <img src="${game.cover}" alt="${game.name}" class="game-cover"
                     onerror="this.src='https://via.placeholder.com/300x400/2a2a2a/00ffcc?text=No+Image'">
                
                <div class="game-info">
                    <div class="game-info-item">
                        <span class="game-info-label">–ñ–∞–Ω—Ä:</span>
                        <span class="game-info-value">${game.genre}</span>
                    </div>
                    <div class="game-info-item">
                        <span class="game-info-label">–¶–µ–Ω–∞:</span>
                        <span class="game-info-value ${game.price === 'free' ? 'free' : 'paid'}">
                            ${game.price === 'free' ? 'üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è' : 'üí≤ –ü–ª–∞—Ç–Ω–∞—è'}
                        </span>
                    </div>
                    <div class="game-info-item">
                        <span class="game-info-label">–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:</span>
                        <span class="game-info-value">${new Date(game.release_date).toLocaleDateString('ru-RU')}</span>
                    </div>
                    <div class="game-info-item">
                        <span class="game-info-label">–†–µ–π—Ç–∏–Ω–≥:</span>
                        <span class="game-info-value">${game.rating}</span>
                    </div>
                </div>
            </div>
            
            <!-- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å - –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã -->
            <div class="game-detail-main">
                <h1 class="game-detail-title">${game.name}</h1>
                <p style="color: var(--text-secondary); line-height: 1.6; margin-bottom: 2rem;">
                    ${game.description}
                </p>
                
                <div class="screenshots-section">
                    <h3 class="screenshots-title">üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã</h3>
                    <div class="screenshots-carousel">
                        <div class="screenshots-track" id="screenshotsTrack"></div>
                        <button class="carousel-nav carousel-prev">‚ùÆ</button>
                        <button class="carousel-nav carousel-next">‚ùØ</button>
                        <div class="carousel-dots" id="carouselDots"></div>
                    </div>
                </div>
                
                <!-- –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è -->
                <div class="game-detail-section">
                    <h3>üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è</h3>
                    <div class="compatibility-details">
                        <div class="compatibility-detail">
                            <span class="detail-label">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:</span>
                            <span class="detail-value">${game.gpu}</span>
                        </div>
                        <div class="compatibility-detail">
                            <span class="detail-label">–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:</span>
                            <span class="detail-value">${game.cpu}</span>
                        </div>
                        <div class="compatibility-detail">
                            <span class="detail-label">–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:</span>
                            <span class="detail-value">${game.ram}</span>
                        </div>
                    </div>
                </div>
                
                <!-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ -->
                <div class="comments-section">
                    <h3 class="comments-title">üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</h3>
                    <ul class="comments-list" id="commentsList"></ul>
                    <div class="comment-form">
                        <textarea class="comment-input" id="commentInput" 
                                  placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."></textarea>
                        <button id="addCommentBtn" class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</button>
                    </div>
                </div>
            </div>
            
            <!-- –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å -->
            <div class="compatibility-section">
                <div class="compatibility-header">
                    <div class="compatibility-icon ${compatibilityClass}"></div>
                    <h3 class="compatibility-title">–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</h3>
                </div>
                <p class="compatibility-message">${compatibilityMessage}</p>
                
                <div class="compatibility-details">
                    <div class="compatibility-detail">
                        <span class="detail-label">–í–∞—à–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:</span>
                        <span class="detail-value">${userGPU || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞'}</span>
                    </div>
                    <div class="compatibility-detail">
                        <span class="detail-label">–¢—Ä–µ–±—É–µ—Ç—Å—è:</span>
                        <span class="detail-value">${game.gpu}</span>
                    </div>
                    <div class="compatibility-detail">
                        <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
                        <div class="detail-status ${compatibilityClass}">
                            ${compatibility === true ? '‚úÖ –°–æ–≤–º–µ—Å—Ç–∏–º–æ' : 
                              compatibility === false ? '‚ùå –ù–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ' : '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
                        </div>
                    </div>
                </div>
                
                ${!userGPU ? `
                    <div style="margin-top: 1.5rem; padding: 1rem; background: var(--bg-primary); border-radius: 8px;">
                        <p style="margin-bottom: 1rem; color: var(--text-secondary);">
                            –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
                        </p>
                        <a href="settings.html" class="btn btn-primary" style="width: 100%; text-align: center;">
                            ‚öôÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
                        </a>
                    </div>
                ` : ''}
            </div>
        </div>
    `;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
    loadScreenshots(game.screenshots);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
function loadScreenshots(screenshots) {
    const track = document.getElementById('screenshotsTrack');
    const dots = document.getElementById('carouselDots');
    
    if (!track) return;
    
    screenshotsData = screenshots || [
        'https://via.placeholder.com/600x340/2a2a2a/00ffcc?text=–°–∫—Ä–∏–Ω—à–æ—Ç+1',
        'https://via.placeholder.com/600x340/2a2a2a/00ffcc?text=–°–∫—Ä–∏–Ω—à–æ—Ç+2',
        'https://via.placeholder.com/600x340/2a2a2a/00ffcc?text=–°–∫—Ä–∏–Ω—à–æ—Ç+3'
    ];
    
    // –û—á–∏—â–∞–µ–º —Ç—Ä–µ–∫ –∏ —Ç–æ—á–∫–∏
    track.innerHTML = '';
    if (dots) dots.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥—ã
    screenshotsData.forEach((src, index) => {
        const slide = document.createElement('div');
        slide.className = 'screenshot-slide';
        slide.innerHTML = `
            <img src="${src}" alt="–°–∫—Ä–∏–Ω—à–æ—Ç ${index + 1}" 
                 onerror="this.src='https://via.placeholder.com/600x340/2a2a2a/00ffcc?text=–û—à–∏–±–∫–∞+–∑–∞–≥—Ä—É–∑–∫–∏'">
        `;
        track.appendChild(slide);
        
        // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if (dots) {
            const dot = document.createElement('button');
            dot.className = `carousel-dot ${index === 0 ? 'active' : ''}`;
            dot.addEventListener('click', () => goToScreenshot(index));
            dots.appendChild(dot);
        }
    });
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    setupCarouselNavigation();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏
function setupCarouselNavigation() {
    const prevBtn = document.querySelector('.carousel-prev');
    const nextBtn = document.querySelector('.carousel-next');
    
    if (prevBtn) {
        prevBtn.addEventListener('click', () => {
            currentScreenshotIndex = (currentScreenshotIndex - 1 + screenshotsData.length) % screenshotsData.length;
            updateCarousel();
        });
    }
    
    if (nextBtn) {
        nextBtn.addEventListener('click', () => {
            currentScreenshotIndex = (currentScreenshotIndex + 1) % screenshotsData.length;
            updateCarousel();
        });
    }
    
    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') {
            currentScreenshotIndex = (currentScreenshotIndex - 1 + screenshotsData.length) % screenshotsData.length;
            updateCarousel();
        } else if (e.key === 'ArrowRight') {
            currentScreenshotIndex = (currentScreenshotIndex + 1) % screenshotsData.length;
            updateCarousel();
        }
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏
function updateCarousel() {
    const track = document.getElementById('screenshotsTrack');
    const dots = document.querySelectorAll('.carousel-dot');
    
    if (track) {
        track.style.transform = `translateX(-${currentScreenshotIndex * 100}%)`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Ç–æ—á–∫—É
    dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentScreenshotIndex);
    });
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–∫—Ä–∏–Ω—à–æ—Ç—É
function goToScreenshot(index) {
    currentScreenshotIndex = index;
    updateCarousel();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function checkCompatibility(userGPU, gameGPU) {
    if (!userGPU || !gameGPU) return null;
    
    const gpuRank = [
        "GT 1030", "GTX 1050", "GTX 1060", "GTX 1070", "GTX 1080",
        "RTX 2060", "RTX 2070", "RTX 2080", 
        "RTX 3060", "RTX 3070", "RTX 3080",
        "RTX 4070", "RTX 4080", "RTX 5070"
    ];

    const userIndex = gpuRank.findIndex(gpu => userGPU.includes(gpu));
    const gameIndex = gpuRank.findIndex(gpu => gameGPU.includes(gpu));

    if (userIndex === -1 || gameIndex === -1) return null;
    
    return userIndex >= gameIndex;
}

function getCompatibilityClass(compatibility) {
    if (compatibility === true) return 'good';
    if (compatibility === false) return 'bad';
    return 'unknown';
}

function getCompatibilityMessage(compatibility, userGPU, gameGPU) {
    if (compatibility === true) {
        return `‚úÖ –í–∞—à –ü–ö –ø–æ—Ç—è–Ω–µ—Ç —ç—Ç—É –∏–≥—Ä—É! –í–∞—à–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ (${userGPU}) —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è (${gameGPU}).`;
    } else if (compatibility === false) {
        return `‚ùå –ú–æ–≥—É—Ç –±—ã—Ç—å –ª–∞–≥–∏. –í–∞—à–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ (${userGPU}) —Å–ª–∞–±–µ–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (${gameGPU}).`;
    } else if (!userGPU) {
        return '‚ÑπÔ∏è –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.';
    } else {
        return '‚ùì –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.';
    }
}

// –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
function setupComments(gameName) {
    const commentInput = document.getElementById('commentInput');
    const addCommentBtn = document.getElementById('addCommentBtn');
    const commentsList = document.getElementById('commentsList');
    
    if (!commentInput || !addCommentBtn || !commentsList) return;
    
    let comments = JSON.parse(localStorage.getItem(`comments_${gameName}`)) || [];
    
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    function renderComments() {
        commentsList.innerHTML = '';
        
        if (comments.length === 0) {
            commentsList.innerHTML = `
                <div style="text-align: center; padding: 2rem; color: var(--text-secondary);">
                    <p>–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
                </div>
            `;
            return;
        }
        
        comments.forEach((comment, index) => {
            const commentItem = document.createElement('li');
            commentItem.className = 'comment-item';
            commentItem.innerHTML = `
                <div class="comment-header">
                    <div class="comment-avatar">üë§</div>
                    <div>
                        <div class="comment-author">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</div>
                        <div class="comment-date">${new Date().toLocaleDateString('ru-RU')}</div>
                    </div>
                </div>
                <div class="comment-text">${comment}</div>
            `;
            commentsList.appendChild(commentItem);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    function add
